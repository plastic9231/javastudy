package ObjectPrac02;

/*
 * 생성자
 * 메모리 내에 객체가 생성될때 호출되어 객체의 구조를 인식하게 하고, 생성되는 멤버변수들을 초기화하는 목적을 둠
 * 생성자명은 클래스명과 같아야 하고, 반환형을 정의하지 말아야한다.
 * 프로그래머가 어떠한 생성자도 정의하지 않았을 경우 컴파일러가 자동으로 만듬
 * 기본생성자 : 인자, 매개변수가 없는 생성자
 * 
 * 생성자의 접근제한의 의미
 * 생서자의 접근제하을 둘 경우 해당 객체를 생성할 수 있는 접근권한을 가짐
 * 클래스의 접근 제한이 public으로 정의되어도 생성자를 private로 정의하면 클래스 내부에서만 접근이 가능하다.
 * protected로 정의되는 클래스 상속관계의 객체들만 생성할 수 있다.
 * 
 * 생성자의 특징
 * 클래스명과 똑같다.
 * 반환형은 void를 명시할 수 없다.
 * 클래스 내부에 생성자가 없을 경우, 컴파일러가 자동으로 생성한다.
 * 하나의 클래스에는 인자의 개수가 다르거나, 인자의 자료형이 다른 생성자를 여러개 가질 수 있다.(생성자 오버로딩)
 * 생서자의 첫번째 라인에서 this(인자)생성자를 사용해서 다른 생성자를 호출할 수 있다.
 * 
 * 
 * 생성자의 구성
 * [접근제한자][생성자명][자료형 인자1, 자료형 인자2] {
 * 		수행문;
 * }
 * 
 */

public class ConstEx {
	
	int num;
	
	public ConstEx() {		//기본 생성자
		num = 10;
		System.out.println("생성자 호출");
		System.out.println(num);
	}
	
	public int getNum() {
		return num;
	}

	public int getNumber() {
		return num;
	}
	
}
