package ObjectPrac01;

/*
 * 1. 맴버 필드(변수,속성)
 * 	 변수와 상수 즉 데이터라고 하는데 이것은 객체가 만들어질때
 * 	 그 객체의 특징적인 속성을 저장해 두는 것임
 * 	 필드의 형태가 static이냐? ==> 클래스변수, 전역변수
 *   아니면 instance이냐? ==> 전역변수이지만, 객체를 생성해야만 접근이 가능한 변수
 * 	 에 따라 필드의 개념이 달라짐
 * 	 
 * 	 상수
 * 	  - 상수라는 것은 고정된값(절대불변, 변하지 않는 값)을 의미하며
 * 		프로그램이 종료될때까지 절대로 변하지 않는 값을 의미함.
 * 	 변수
 * 	  - 변수는 상수와는 반대로 프로그램이 종료 될 동안(실행하는 동안) 값이
 * 		변경될 수 있는 속성을 의미함
 * 
 * 	 변수와 상수앞에 접근 제한자를 지정함
 * 
 * 		private : 현재 클래스(객체) 내에서만 접근을 허용함
 *     	default : 같은 패키지에 있는 클래스(객체)만 접근을 허용함
 *      protected : 같은 패키지에 있는 객체와 상속관계의 객체들만 접근을 허용함      
 *      public : 모든 객체의 접근을 허용한다 
 * 
 * 	  접근제한자
 * 		private, default, protected, public
 * 
 * 		final : 변수의 값이 변하지 않도록 고정시키는 키워드
 * 
 * 2. 맴버 메소드
 *    - 메소드는 특정한 일을 수행하는 행위나 동작을 의미함
 *    - 멤버필드 들의 값을 가지고 작업을 수행할 수 도 있으며,
 *     	메소드도 static메소드, instance 메소드 라는 종류가 있다.
 *     	앞에 static이 붙지 않은 메소드는 전부 instance 메소드이다.
 *     
 * 3. 생성자
 * 	  - 생성자는 객체의 생성을 컴퓨터에게 알리는 역할과
 * 		멤버 필드의 초기화를 수행하는 역할을 한다.
 *     
 *  
 * 
 */



public class BookEx {

	public static void main(String[] args) { //static을 붙여줘야 어느 클래스라도 실행이 가능해진다.
		// 객체생성
		Book b1 = new Book();
		Book b2 = new Book();
		Book b3 = new Book();
		
		Book.name="홍길동전";
		// static으로 선언후 클래스 객체 생성을 하지 않아서 모두 같은 공간에 저장됨
		b1.writer="허균";
		// instance형태 이기 때문에 객체를 생성하여 클래스를 불러왔다.
		
		// b1.price=200;
		//final을 붙여서 고정값을 가져서 오류가 일어난다.
		
		
		
		
		
		System.out.println(Book.name);
		System.out.println(b1.writer);
	}

}
